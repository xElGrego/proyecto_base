{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Proyecto base C\u00f3digo limpio, f\u00e1cil de leer,entender y escalar. Esta es la documentaci\u00f3n del proyecto base de angular con la arquitectura de software clean code. Con la arquitectura establecida podemos hacer escalar el proyecto que estemos realizando optimizando los recusos de los diferentes m\u00f3dulos en el proyecto creado. La estructura de carpetas de los proyectos en angular se puede crear de una manera sencilla a tr\u00e1ves de angular CLI,pero \u00bfCon eso basta? En ocaciones esa estructura que se va creando en base a las necesidades de los desarrolladores y de la aplicaci\u00f3n puede llegar a convertirse en un dolor de cabeza. Es probable que para proyectos peque\u00f1os la estrucutra de carpetas generada por Angular CLI sea suficiente, pero cuando el proyecto se torna grande, la estructura debe ser escalable para evitar desorganizaci\u00f3n y hacer m\u00e1s f\u00e1cil las tareas de incluir y mejorar funcionabilidades. En la siguiente guia nos enfocamos en una aplicaci\u00f3n escalable a nivel de arquitectura y datos en el front con angular. Esta estructura tiene cuatro tipos fundamentales Config Module Core Module Modules Shared Module","title":"Introducci\u00f3n"},{"location":"#proyecto-base","text":"C\u00f3digo limpio, f\u00e1cil de leer,entender y escalar. Esta es la documentaci\u00f3n del proyecto base de angular con la arquitectura de software clean code. Con la arquitectura establecida podemos hacer escalar el proyecto que estemos realizando optimizando los recusos de los diferentes m\u00f3dulos en el proyecto creado. La estructura de carpetas de los proyectos en angular se puede crear de una manera sencilla a tr\u00e1ves de angular CLI,pero \u00bfCon eso basta? En ocaciones esa estructura que se va creando en base a las necesidades de los desarrolladores y de la aplicaci\u00f3n puede llegar a convertirse en un dolor de cabeza. Es probable que para proyectos peque\u00f1os la estrucutra de carpetas generada por Angular CLI sea suficiente, pero cuando el proyecto se torna grande, la estructura debe ser escalable para evitar desorganizaci\u00f3n y hacer m\u00e1s f\u00e1cil las tareas de incluir y mejorar funcionabilidades. En la siguiente guia nos enfocamos en una aplicaci\u00f3n escalable a nivel de arquitectura y datos en el front con angular. Esta estructura tiene cuatro tipos fundamentales Config Module Core Module Modules Shared Module","title":"Proyecto base"},{"location":"pages/config/","text":"Configuracion En esta carpeta vamos a guardar todos los archivos est\u00e1ticos que usaremos en el proyecto. Todo estos c\u00f3digos van a estar hardcodeados pero englobados en un archivo typescript. Cada vez que queremos acceder a esta informaci\u00f3n podemos hacer referencia a esta configuraci\u00f3n, asi cuando lo cambiemos en un solo lugar afectar\u00e1 a todas las variables que est\u00e9n por toda la aplicaci\u00f3m.","title":"Config"},{"location":"pages/config/#configuracion","text":"En esta carpeta vamos a guardar todos los archivos est\u00e1ticos que usaremos en el proyecto. Todo estos c\u00f3digos van a estar hardcodeados pero englobados en un archivo typescript. Cada vez que queremos acceder a esta informaci\u00f3n podemos hacer referencia a esta configuraci\u00f3n, asi cuando lo cambiemos en un solo lugar afectar\u00e1 a todas las variables que est\u00e9n por toda la aplicaci\u00f3m.","title":"Configuracion"},{"location":"pages/core/","text":"El Core Module es responsable de mantener los servicios globales. Por ejemplo los servicios HTTP para comunicarse con una API. Tambi\u00e9n se utiliza para almacenar guards, modelos y otras dependencias globales, como el interceptor http y el controlador de errores global. Para mantener una base de c\u00f3digo bien estructurada y escrita El Core Module agrupa \u201ccomponentes\u201d que s\u00ed y s\u00f3lo si se van a compartir a trav\u00e9s de toda la aplicaci\u00f3n pero generando una referencia \u00fanica. El core debe contener instancias donde solo hay una por aplicaci\u00f3n. Guards: Son servicios especiales que ayuda a otorgar acceso a rutas. Interceptores: Ayudan a interceptar o modificar las solicituds y respuestas http. Modelos: Deber\u00edamos poner modelos generales en el m\u00f3dulo. Servicios: Servicios para realizar las peticiones htpp. Componentes: Contendr\u00e1 los componentes que son comunes en toda la aplicaci\u00f3n, como encabezado, footer,barra de navegaci\u00f3n.","title":"Core"},{"location":"pages/modules/","text":"Los m\u00f3dulos hacen referencia a las funcionabilidades de la aplicaci\u00f3n. Un m\u00f3dulo declara un contexto de compilaci\u00f3n para un conjunto de componentes que est\u00e1 dedicado a un dominio de aplicaci\u00f3n, flujo de trabajo o un conjuto de capacidades estrechamente relacionadas. En un m\u00f3dulo podemos asociar componentes,directivas,pipes,etc. Organizar el c\u00f3digo en distintos m\u00f3dulos funcionales ayuda a gestionar el desarrollo de aplicaciones complejas , y en el dise\u00f1o para su reutilizaci\u00f3n.Adem\u00e1s esta t\u00e9cnica te permite aprovechar el lazy loading, es decir cargar modulos solo cuando sea necesario para minimizar la cantidad de c\u00f3digo que debe cargar al inicio. Por ejemplo: Si la aplicaci\u00f3n est\u00e1 orientada a realizar citas m\u00e9dicas. - Un m\u00f3dulo seria de citas m\u00e9dicas donde podriamos a\u00f1adir citas m\u00e9dicas, editar, eliminar,etc. - Otro m\u00f3dulo seria el de m\u00e9dicos donde podriamos hacer las mismas acciones mencioanadas anteriormente. Entonces el folder quedaria asi. \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 app \u2502 \u2502 \u251c\u2500\u2500 modules \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500citas-medicas \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 pages \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 citas-medicas-home \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 citas-medicas.component.ts \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 citas-medicas.component.html \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 citas-medicas.component.scss \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 citas-medicas.component.spec \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-citas-medicas \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-citas-medicas.component.ts \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-citas-medicas.component.html \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-citas-medicas.component.scss \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-citas-medicas.component.spec \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500medicos \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 pages \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 medicos-home \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 medicos.component.ts \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 medicos.component.html \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 medicos.component.scss \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 medicos.component.spec \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-medicos \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-medicos.component.ts \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-medicos.component.html \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-medicos.component.scss \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 agregar-medicos.component.spec","title":"Modules"},{"location":"pages/shared/","text":"En la carpeta de shared vamos a guardar los componentes que reutilizaremos por todo el proyecto repetidamente; como alertas, botones personalizados, titulos personalizados El Shared se puede importar en cualquier otro m\u00f3dulo cuando esos elementos se vuelvan a reutilizar. El m\u00f3dulo compartido no deberia depender del resto de la aplicaci\u00f3n y, por lo tanto no deber\u00eda depender de ning\u00fan otro m\u00f3dulo.","title":"Shared"}]}